{"version":3,"sources":["app/reducers/userSlice.ts","components/Header/AdminHeader.tsx","components/Header/PublicHeader.tsx","components/Header/UserHeader.tsx","components/Header/Header.tsx","components/ProtectedRoute/ProtectedRoute.tsx","components/Editor/Control.tsx","components/Loading/Loading.tsx","components/Unauthorized/Unauthorized.tsx","components/Editor/Editor.tsx","pages/admin/UserRoles/UserRolesEdit.tsx","components/List/FilterItem.tsx","components/DeleteModal/DeleteModal.tsx","components/List/RowItem.tsx","components/List/Row.tsx","components/List/Table.tsx","components/List/FilteredList.tsx","pages/admin/UserRoles/UserRolesList.tsx","components/List/ConnectBase.tsx","pages/admin/Users/UsersList.tsx","pages/public/Home/Home.tsx","app/utils.ts","pages/public/Login/ForgottenPassword.tsx","pages/public/Login/PasswordComponent.tsx","pages/public/Login/ForgottenPasswordReset.tsx","app/hooks.ts","pages/public/Login/utils.ts","pages/public/Login/Login.tsx","pages/public/Login/PassportCallback.tsx","pages/public/Login/Register.tsx","pages/public/Login/VerifyUser.tsx","pages/user/Posts/Posts.tsx","components/Image/Image.tsx","pages/user/PostsV2/PostsV2.tsx","pages/user/UserDashboard/UserDashboard.tsx","App.tsx","app/store.ts","serviceWorker.ts","app/refreshToken.ts","app/apolloClient.ts","index.tsx"],"names":["initialState","user","token","localStorage","getItem","email","id","roles","split","map","role","name","verified","Boolean","userFromStorage","state","userSlice","createSlice","reducers","changeState","action","payload","login","userToken","setItem","refreshToken","toString","r","logout","removeItem","selectUser","actions","UserHeader","onLogout","className","Dropdown","Toggle","variant","Menu","Item","href","to","onClick","PublicHeader","Header","useSelector","dispatch","useDispatch","find","AdminHeader","ProtectRoute","path","exact","children","Control","storedData","label","required","register","placeholder","formState","setValue","errors","error","useEffect","Fragment","Form","Group","controlId","Label","type","isInvalid","FormControl","Feedback","Loading","what","Unauthorized","where","Alert","getDataFromRaw","rawData","Object","keys","Editor","form","renameError","onUpdated","updateCache","query","useState","undefined","localId","setLocalId","unauthorized","setUnauthorized","setErrors","setStoredData","handleError","incommingError","incomingErrors","message","onCompleted","raw","data","skipLoading","loading","useQuery","QUERY","variables","skip","loadedDataRaw","loadedData","updateDataFromLoaded","onError","e","useMutation","CREATE_MUTATION","errorPolicy","update","createProjectMutation","UPDATE_MUTATION","updateProjectMutation","onSubmit","useCallback","userId","UserRoleForm","reactForm","userRoleId","graphQlError","useForm","handleSubmit","Button","UserRoleEdit","useParams","fields","basicOptionsName","contains","not_contains","starts_with","not_starts_with","ends_with","not_ends_with","isEmpty","FilterItem","onChange","fieldSelected","setFieldSelected","optionSelected","setOptionSelected","filterText","setFilterText","filter","setFilter","doFilter","f","processFilter","field","option","text","gc","o","o2","go","InputGroup","DropdownButton","as","Prepend","title","getOwnPropertyNames","value","target","DeleteModal","show","onHide","onDelete","modelName","deleteObject","deleting","Modal","closeButton","Title","Body","Footer","disabled","ListRowItem","item","fieldDesc","names","element","getElementFromField","component","substr","length","push","reduce","p","ListRow","showDelete","onEdit","getEditLink","doEdit","editLink","useMemo","toLowerCase","tabIndex","onKeyPress","size","Table","adminMode","queries","setDeleteObject","showDeleteDialog","setShowDeleteDialog","deletingOnDeleteDialog","setDeletingOnDeleteDialog","setData","setError","ADMIN_LIST_QUERY","USER_LIST_QUERY","d","dataFields","userRefetch","refetch","DELETE_MUTATION","onHideDidaloDelete","deleteProjectMutation","obj","responsive","projectItem","createFilter","AND","addAnd","node","filterDestructNode","n","filterDestruct","fo","params","FilteredList","staticFilter","onCreate","history","useHistory","createDefaultFilter","defaultFilter","user_every","filterDestructed","console","log","onFilterChange","UserRoleList","ConnectBase","gql","elementTitle","setTitle","iraw","final","checked","indexOf","ADD","addMutation","REMOVE","removeMutation","updated","updateTitle","id1","id2","onChecked","Check","QUERY_ALL_USERS_ADMIN","USER_ROLE_QUERY","MUTATION_ADD_USER_ROLE_TO_USER","MUTATION_REMOVE_USER_ROLE_FROM_USER","MUTATION_REMOVE_USER","ConnectRole","UsersList","Home","getGraphqlMonsterClientAppRoot","process","isEmailValid","RegExp","test","passwordStrong","password","valid","strong","capital","lower","number","percentage","FORGOTTEN_PASSWORD_REQUEST_MUTATION","ForgottenPassword","setEmail","invalidEmail","setInvalidEmail","emailSent","setEmailSent","doForgottenPassword","onRequestSend","a","data-bgimage","data-scroll-speed","method","event","Text","PasswordComponent","onPasswordChange","strongPassword","ProgressBar","now","FORGOTTEN_PASSWORD_CHECK_MUTATION","FORGOTTEN_PASSWORD_RESET_MUTATION","ForgotenPasswordReset","match","_","get","setPassword","copy","setCopy","doForgottenPasswordCheck","loadingForgottenPasswordCheck","dataForgottenPasswordCheck","doForgottenPasswordReset","setInvalidPass","setStrong","invalidCopy","setInvalidCopy","doCheck","onReset","reset","replace","check","status","pass","isPasswordValid","c","useAppDispatch","LOGIN_QL","Login","setPass","invalidPass","URLSearchParams","location","search","loginMutation","onLogin","login_v1","onBackClick","goBack","tokenFromFacebookCode","code","axios","PassportCallback","useLocation","codeRaw","showError","errorMessage","setTimeout","response","JSON","parse","request","REGISTER_MUTATION","Register","registerMutation","emailProbablyTaken","setEmailProbablyTaken","onRegister","register_v1","VERIFY_EMAIL_MUTATION","VerifyUser","verifyToken","setVerified","verify","verifying","verifiedError","doVerifyUser","verifyEmail_v1","previouslyVerified","onVerifyUser","ALL_QUERY","Posts","setText","color","setColor","createPost","createError","loadingError","addPost","defaultValue","rows","allPost_v2","post","idx","style","backgroundColor","rel","Image","publicKey","_width","width","_height","height","overflow","alt","objectFit","minHeight","src","REMOVE_MUTATION","REMOVE_IMAGE_MUTATION","handeUpload","callback","files","currentTarget","file","FormData","append","Promise","resolve","reject","headers","Authorization","uploadFile","hasImages","CarouselImages","images","Carousel","image","Caption","PreviewImage","postForRemoveId","setPostForRemoveId","removePost","removeError","removeImage","uploadError","setImages","all","uploadedImages","imagesIds","ui","postForRemove","removeAllImages","htmlFor","added","Array","from","preview","URL","createObjectURL","display","multiple","i","onImageRemove","aria-hidden","UserDashboard","App","ProtectedRoute","PostsV2","ForgottenPasswordReset","UserRolesList","store","configureStore","reducer","userReducer","window","hostname","retryLink","RetryLink","attempts","count","operation","delay","Math","random","isRefreshing","pendingRequests","refreshTokenAction","forward","forward$","fromPromise","then","refreshToken_v1","oldHeaders","getContext","setContext","authorization","catch","finally","flatMap","authLink","httpLink","createHttpLink","uri","erroLink","graphQLErrors","networkError","some","tokenExpired","locations","apolloClient","ApolloClient","link","ApolloLink","cache","InMemoryCache","defaultOptions","watchQuery","mutate","ReactDOM","render","StrictMode","ApolloProvider","client","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6db21f51.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { RootState } from '../store'\r\n\r\nexport interface UserToken {\r\n  token: string\r\n  refreshToken: string\r\n  user: User\r\n}\r\n\r\nexport interface User {\r\n  id: string\r\n  email: string\r\n  verified: boolean\r\n  roles: UserRole[]\r\n  selectedOrgId?: string\r\n}\r\n\r\nexport interface UserRole {\r\n  name: string\r\n}\r\n\r\nexport interface UserState {\r\n  user?: UserWithToken\r\n  state: 'no-user' | 'processing' | 'user-login'\r\n}\r\n\r\nexport type UserWithToken = User & {\r\n  token: string\r\n}\r\n\r\nconst userToStorage = (userToken: UserToken) => {\r\n  localStorage.setItem('user.token', userToken.token)\r\n  localStorage.setItem('user.refreshToken', userToken.refreshToken)\r\n  localStorage.setItem('user.id', userToken.user.id)\r\n  localStorage.setItem('user.email', userToken.user.email)\r\n  localStorage.setItem('user.verified', Boolean(userToken.user.verified).toString())\r\n  localStorage.setItem('user.roles', userToken.user.roles.map((r) => r.name).toString())\r\n}\r\n\r\nconst removeUserFromStorage = () => {\r\n  localStorage.removeItem('user.refreshToken')\r\n  localStorage.removeItem('user.token')\r\n  localStorage.removeItem('user.id')\r\n  // localStorage.removeItem('user.email')\r\n  localStorage.removeItem('user.verified')\r\n  localStorage.removeItem('user.roles')\r\n}\r\n\r\nconst userFromStorage = () => {\r\n  const token = localStorage.getItem('user.token')\r\n  if (!token) {\r\n    return\r\n  }\r\n\r\n  return {\r\n    token,\r\n    email: localStorage.getItem('user.email'),\r\n    id: localStorage.getItem('user.id'),\r\n    roles: localStorage\r\n      .getItem('user.roles')\r\n      ?.split(',')\r\n      .map((role) => ({ name: role })),\r\n    verified: Boolean(localStorage.getItem('user.verified')),\r\n  } as UserWithToken\r\n}\r\n\r\nconst initialState: UserState = {\r\n  user: userFromStorage(),\r\n  state: 'no-user',\r\n}\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    changeState: (state, action: PayloadAction<UserState['state']>) => {\r\n      state.state = action.payload\r\n    },\r\n    login(state, action: PayloadAction<UserToken>) {\r\n      userToStorage(action.payload)\r\n      state.user = {\r\n        id: action.payload.user.id,\r\n        token: action.payload.token,\r\n        email: action.payload.user.email,\r\n        roles: action.payload.user.roles,\r\n        verified: Boolean(action.payload.user.verified),\r\n      } as UserWithToken\r\n    },\r\n    logout(state) {\r\n      removeUserFromStorage()\r\n      delete state.user\r\n    },\r\n  },\r\n})\r\n\r\nexport const selectUser = (state: RootState) => state.user.user\r\n// Action creators are generated for each case reducer function\r\nexport const { login, logout, changeState } = userSlice.actions\r\n\r\nexport default userSlice.reducer\r\n","import React from 'react'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst UserHeader = ({ user, onLogout }: any) => (<div className=\"header-light transparent scroll-light container\">\r\n  <div className=\"row\">\r\n    <div className=\"col-md-2\">\r\n      <Dropdown>\r\n        <Dropdown.Toggle variant=\"normal\" id=\"dropdown-basic\">\r\n          Menu\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item href=\"/\">Home</Dropdown.Item>\r\n        </Dropdown.Menu>\r\n\r\n      </Dropdown>\r\n\r\n      <Dropdown>\r\n        <Dropdown.Toggle variant=\"normal\" id=\"dropdown-basic\">\r\n          Admin\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item href=\"/admin/users\">Users</Dropdown.Item>\r\n          <Dropdown.Item href=\"/admin/roles\">Roles</Dropdown.Item>\r\n        </Dropdown.Menu>\r\n\r\n      </Dropdown>\r\n    </div>\r\n    <div className=\"header-text col-md-8\">\r\n      <div>\r\n        This Header only for loged user with admin role\r\n      </div>\r\n    </div>\r\n    <div className=\"col-md-2\">\r\n      <Dropdown>\r\n        <Dropdown.Toggle variant=\"normal\" id=\"dropdown-basic\">\r\n          User\r\n        </Dropdown.Toggle>\r\n\r\n\r\n\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item href=\"/\"><Link to=\"/user/dashboard\" >User Dashboard</Link></Dropdown.Item>\r\n          <Dropdown.Item href=\"/\"><Link className=\"\" to=\"/\" onClick={onLogout}>Logout</Link></Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </div>\r\n  </div>\r\n</div>)\r\n\r\nexport default UserHeader","import React from 'react'\r\nimport { Dropdown } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport './Header.css'\r\n\r\n\r\nexport const PublicHeader = () => (<div className=\"header-light transparent scroll-light container\">\r\n  <div className=\"row\">\r\n    <div className=\"col-md-2\">\r\n      <Dropdown>\r\n        <Dropdown.Toggle variant=\"normal\" id=\"dropdown-basic\">\r\n          Menu\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item href=\"/\">Home</Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </div>\r\n    <div className=\"header-text col-md-8\">\r\n      <div>\r\n        This is public Header\r\n      </div>\r\n    </div>\r\n    <div className=\"col-md-2\">\r\n      <Link className=\"\" to=\"/login\">Login</Link> or <Link className=\"\" to=\"/register\">Register</Link>\r\n    </div>\r\n  </div>\r\n</div>)\r\n\r\n\r\n\r\nexport default PublicHeader","import React from 'react'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst UserHeader = ({ user, onLogout }: any) => (<div className=\"header-light transparent scroll-light container\">\r\n  <div className=\"row\">\r\n    <div className=\"col-md-2\">\r\n      <Dropdown>\r\n        <Dropdown.Toggle variant=\"normal\" id=\"dropdown-basic\">\r\n          Menu\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item ><Link to=\"/\" >Home</Link></Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </div>\r\n    <div className=\"header-text col-md-8\">\r\n      <div>\r\n        This Header only for anybody who is logged in\r\n      </div>\r\n    </div>\r\n    <div className=\"col-md-2\">\r\n      <Dropdown>\r\n        <Dropdown.Toggle variant=\"normal\" id=\"dropdown-basic\">\r\n          User\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item href=\"/\"><Link to=\"/user/dashboard\" >User Dashboard</Link></Dropdown.Item>\r\n          <Dropdown.Item href=\"/\"><Link className=\"\" to=\"/\" onClick={onLogout}>Logout</Link></Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </div>\r\n  </div>\r\n</div>)\r\n\r\nexport default UserHeader","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logout, selectUser } from '../../app/reducers/userSlice'\r\nimport AdminHeader from './AdminHeader'\r\nimport PublicHeader from './PublicHeader'\r\nimport UserHeader from './UserHeader'\r\n\r\nexport const Header: React.FC = () => {\r\n  const user = useSelector(selectUser)\r\n  const dispatch = useDispatch()\r\n\r\n  const onLogout = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n  if (user && user.token) {\r\n    if (user.roles.find((r) => r.name === 'admin')) return <AdminHeader user={user} onLogout={onLogout} />\r\n    else return <UserHeader user={user} onLogout={onLogout} />\r\n  }\r\n\r\n  return <PublicHeader />\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport { selectUser } from '../../app/reducers/userSlice'\r\n\r\nexport const ProtectRoute: React.FC<{ path: string, role?: string, exact?: boolean }> = ({ path, role, exact, children }) => {\r\n    const user = useSelector(selectUser)\r\n\r\n    if (role && !user?.roles.find(r => r.name === role)) {\r\n        return (<Redirect to={`/login?path=${path}&role=${role}`} />)\r\n    }\r\n\r\n    if (!user?.token) {\r\n        return (<Redirect to={`/login?path=${path}`} />)\r\n    }\r\n\r\n    return (<Route path={path} exact={exact} children={children} />)\r\n}\r\n\r\nexport default ProtectRoute","import React, { useEffect } from 'react'\r\nimport { Form, FormControl } from 'react-bootstrap'\r\n\r\nexport const Control = ({ name, storedData, label, required, register, placeholder, formState, setValue }: any) => {\r\n  const { errors } = formState\r\n  const error = (errors && errors[name])\r\n\r\n  useEffect(() => {\r\n    if (storedData && storedData[name]) setValue(name, storedData[name])\r\n  }, [storedData, setValue, name])\r\n\r\n  return (\r\n    <React.Fragment >\r\n      <Form.Group controlId={`form-${name}`}>\r\n        <Form.Label>{label} {required && '*'}</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder={placeholder}\r\n          {...register(name as any, { required })}\r\n\r\n          isInvalid={error}\r\n        /* isValid={dirty && !error} */\r\n        />\r\n\r\n        <FormControl.Feedback type=\"valid\">\r\n          Perfect!\r\n        </FormControl.Feedback>\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          Please provide a valid {label}.\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Control","\r\nimport React from \"react\";\r\n\r\nexport const Loading = ({what = ''}) => {\r\n    return (<div>{`Loading ${what}... `}</div>)\r\n}\r\n\r\nexport default Loading","import React from \"react\";\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nexport const Unauthorized = ({where = ''}) => {\r\n    return (<Alert variant={'danger'}>{`Unauthorized ${where} access`}</Alert>)\r\n}\r\n\r\nexport default Unauthorized","import { useMutation, useQuery } from '@apollo/client'\r\nimport React, { useCallback, useState } from 'react'\r\nimport Loading from '../Loading/Loading'\r\nimport Unauthorized from '../Unauthorized/Unauthorized'\r\n\r\nexport const getDataFromRaw = (rawData: any) => {\r\n  const rawName = Object.keys(rawData)[0]\r\n  return rawData[rawName]\r\n}\r\n\r\nexport const Editor = ({ name, form, id, renameError, onUpdated, updateCache, query, children }: any) => {\r\n  const [localId, setLocalId] = useState(id !== 'create' ? id : undefined)\r\n  const [unauthorized, setUnauthorized] = useState(false)\r\n  const [errors, setErrors] = useState<string[] | null>([])\r\n\r\n  const [storedData, setStoredData] = useState({})\r\n\r\n  const handleError = (incommingError: { message: string }) => {\r\n    let incomingErrors = incommingError.message.split('\\n')\r\n    if (renameError) {\r\n      incomingErrors = incomingErrors.map((error) => renameError(error))\r\n    }\r\n    setErrors(incomingErrors)\r\n  }\r\n\r\n  const updateDataFromLoaded = (loadedDataRaw: any) => {\r\n    if (!loadedDataRaw) {\r\n      return\r\n    }\r\n\r\n    const loadedData = getDataFromRaw(loadedDataRaw)\r\n\r\n    if (loadedData) {\r\n      setStoredData({ ...loadedData })\r\n    } else {\r\n      setUnauthorized(true)\r\n    }\r\n  }\r\n\r\n  const onCompleted = (raw: any) => {\r\n    const data = getDataFromRaw(raw)\r\n    setLocalId(data.id)\r\n    setErrors(null)\r\n    if (onUpdated) onUpdated(raw)\r\n  }\r\n\r\n  const skipLoading = !localId\r\n  const { loading } = useQuery(query.QUERY, {\r\n    variables: { id: localId },\r\n    skip: skipLoading,\r\n    onCompleted: (loadedDataRaw: any) => {\r\n      updateDataFromLoaded(loadedDataRaw)\r\n    },\r\n    onError: (e) => {\r\n      if (e.message === 'GraphQL error: Unauhorized') {\r\n        setUnauthorized(true)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [createProjectMutation] = useMutation(query.CREATE_MUTATION, {\r\n    errorPolicy: 'none',\r\n    onCompleted: onCompleted,\r\n    update: updateCache,\r\n    onError: handleError,\r\n  })\r\n\r\n  const [updateProjectMutation] = useMutation(query.UPDATE_MUTATION, {\r\n    errorPolicy: 'none',\r\n    onCompleted: onCompleted,\r\n    update: updateCache,\r\n    onError: handleError,\r\n  })\r\n\r\n  // const onSubmit = (data:any) => {\r\n  //   console.log(data)\r\n  // }\r\n\r\n  const onSubmit = useCallback(\r\n    (data) => {\r\n      if (localId) {\r\n        setErrors(null)\r\n        updateProjectMutation({\r\n          variables: {\r\n            id: localId,\r\n            ...data,\r\n          },\r\n        })\r\n      } else {\r\n        createProjectMutation({\r\n          variables: {\r\n            userId: localStorage.getItem('user.id'),\r\n            ...data,\r\n          },\r\n        })\r\n      }\r\n    },\r\n    [localId, createProjectMutation, updateProjectMutation],\r\n  )\r\n\r\n  if (unauthorized) {\r\n    return <Unauthorized where={`${name} edit`} />\r\n  }\r\n\r\n  if (loading) {\r\n    return <Loading what={name} />\r\n  }\r\n\r\n  return <div>{children(storedData, onSubmit, errors)}</div>\r\n}\r\n\r\nexport default Editor\r\n","import { loader } from \"graphql.macro\";\r\nimport React from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { useForm } from 'react-hook-form';\r\nimport { useParams } from \"react-router-dom\";\r\nimport Control from \"../../../components/Editor/Control\";\r\nimport Editor from \"../../../components/Editor/Editor\";\r\n\r\nconst CREATE_MUTATION = loader('./graphql/mutation-create-user-role.gql')\r\nconst UPDATE_MUTATION = loader('./graphql//mutation-update-user-role.gql')\r\nconst QUERY = loader('./graphql/query-user-role.gql')\r\n\r\nconst UserRoleForm = ({ storedData, onSubmit, userRoleId, graphQlError }: any) => {\r\n  const reactForm = useForm()\r\n  const { handleSubmit } = reactForm\r\n  return (<Form onSubmit={handleSubmit(onSubmit)}>\r\n    <Control name={'name'} label={'Role name'} required={true} storedData={storedData} {...reactForm} />\r\n    <Button type=\"submit\">Save</Button>\r\n  </Form>)\r\n}\r\n\r\nexport const UserRoleEdit = (data: any) => {\r\n  const { id } = useParams() as { id: string }\r\n\r\n  return (\r\n    <>\r\n      <Editor\r\n        id={id}\r\n        name={'UserRole'}\r\n        fields={['role']}\r\n        query={{\r\n          CREATE_MUTATION,\r\n          UPDATE_MUTATION,\r\n          QUERY\r\n        }}\r\n      >\r\n        {(storedData: any, onSubmit: any, errors: any) => <UserRoleForm storedData={storedData} onSubmit={onSubmit} graphQlError={errors} userRoleId={id} />}\r\n      </Editor>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserRoleEdit","import React, { useCallback, useState } from 'react';\r\nimport { Dropdown, DropdownButton, Form, InputGroup } from \"react-bootstrap\";\r\nimport './FilterItem.css';\r\n\r\nconst basicOptionsName = {\r\n    contains: 'contains',\r\n    not_contains: 'not contains',\r\n    starts_with: 'starts with',\r\n    not_starts_with: 'not starts with',\r\n    ends_with: 'ends with',\r\n    not_ends_with: 'not ends with',\r\n    isEmpty: 'is empty',\r\n}\r\n\r\ntype basicOptionsNameType = 'contains' | 'not_contains' | 'starts_with' | 'not_starts_with' | 'ends_with' | 'not_ends_with' | 'isEmpty'\r\nexport interface IFilterItemParam {\r\n    fields: any[]\r\n    onChange: (filter: string | null) => void\r\n}\r\n\r\nexport const FilterItem: React.FC<IFilterItemParam> = ({ fields, onChange }) => {\r\n    const [fieldSelected, setFieldSelected] = useState(fields[0])\r\n    const [optionSelected, setOptionSelected] = useState('contains')\r\n    const [filterText, setFilterText] = useState('')\r\n    const [filter, setFilter] = useState<string | null>('null')\r\n\r\n    const onFieldChange = (field: any) => {\r\n        setFieldSelected(field)\r\n        processFilter(field, optionSelected, filterText)\r\n    }\r\n\r\n    const onOptionChange = (option: any) => {\r\n        setOptionSelected(option)\r\n        processFilter(fieldSelected, option, filterText)\r\n    }\r\n\r\n    const onFilterChange = (e: any) => {\r\n        const text = e.target.value\r\n        setFilterText(text)\r\n        processFilter(fieldSelected, optionSelected, text)\r\n    }\r\n\r\n    const doFilter = useCallback((f: string | null) => {\r\n        if (filter !== f) {\r\n            setFilter(f)\r\n            onChange(f)\r\n        }\r\n    }, [filter, onChange, setFilter])\r\n\r\n    const processFilter = useCallback((field, option, text) => {\r\n        if (!text && option !== 'isEmpty') {\r\n            doFilter(null)\r\n            return\r\n        }\r\n\r\n        const f = {} as any\r\n        f[`${field}_${option}`] = text\r\n        doFilter(f)\r\n\r\n    }, [doFilter])\r\n\r\n    const gc = (o: any) => {\r\n        const o2 = o\r\n        return () => {\r\n            onFieldChange(o2)\r\n        }\r\n    }\r\n\r\n    const go = (o: any) => {\r\n        const o2 = o\r\n        return () => { onOptionChange(o2); }\r\n    }\r\n\r\n\r\n    return (\r\n        <InputGroup className=\"mb-3\">\r\n            <DropdownButton\r\n                className=\"field-option\"\r\n                as={InputGroup.Prepend}\r\n                variant=\"success\"\r\n                title={fieldSelected}\r\n                id=\"input-group-dropdown-0\" >\r\n                {fields.map((o) => (<Dropdown.Item key={o} onClick={gc(o)}>{o.toString()}</Dropdown.Item>))}\r\n            </DropdownButton>\r\n            <DropdownButton\r\n                className=\"select-option\"\r\n                as={InputGroup.Prepend}\r\n                variant=\"outline-link\"\r\n                title={basicOptionsName[optionSelected as basicOptionsNameType]}\r\n                id=\"input-group-dropdown-1\" >\r\n                {Object.getOwnPropertyNames(basicOptionsName).map((o) => (<Dropdown.Item key={o} onClick={go(o)}>{basicOptionsName[o as basicOptionsNameType]}</Dropdown.Item>))}\r\n            </DropdownButton>\r\n            <Form.Control value={filterText} onChange={onFilterChange} />\r\n        </InputGroup>)\r\n\r\n}\r\n\r\nexport default FilterItem","import React from 'react'\r\nimport { Button, Modal } from 'react-bootstrap'\r\n\r\nexport interface IDeleteModalParams {\r\n  show: boolean\r\n  onHide: () => void\r\n  onDelete: (deleteObject: any) => void\r\n  modelName: string\r\n  deleteObject?: any\r\n  deleting?: boolean\r\n}\r\n\r\nexport const DeleteModal: React.FC<IDeleteModalParams> = ({ show, onHide, onDelete, modelName, deleteObject, deleting }) => {\r\n  const onDeleteAction = () => {\r\n    if (!deleting) {\r\n      onDelete(deleteObject)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal show={show} onHide={onHide}>\r\n        <Modal.Header closeButton>\r\n          <div>\r\n            <Modal.Title>\r\n              Delete {'>>'} {deleteObject && deleteObject.name} {'<<'}\r\n            </Modal.Title>\r\n          </div>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          {!deleting ? (\r\n            <p>\r\n              Are you sure, you want delete {modelName} item with name <b>'{deleteObject && deleteObject.name}'</b> and id <i>'{deleteObject && deleteObject.id}'</i>\r\n            </p>\r\n          ) : (\r\n            <p>\r\n              Deleting {modelName} item with name '{deleteObject && deleteObject.name}' and id '{deleteObject && deleteObject.id}' ...\r\n            </p>\r\n          )}\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button disabled={deleting} variant=\"danger\" type=\"submit\" onClick={onDeleteAction}>\r\n            Delete\r\n          </Button>\r\n          <Button disabled={deleting} variant=\"primary\" onClick={onHide}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteModal\r\n","import React from \"react\";\r\nimport './Row.css';\r\n\r\n\r\nexport interface IFilteredFieldDesc {\r\n  name: string\r\n  title?: string\r\n  component?: React.FC<any>\r\n}\r\n\r\nexport type IFilteredField = IFilteredFieldDesc | string\r\n\r\nexport interface IListRowParams {\r\n  item: any\r\n  field: IFilteredField\r\n}\r\n\r\nconst getElementFromField = (item: any, field: IFilteredField) => {\r\n  const fieldDesc = field as IFilteredFieldDesc\r\n\r\n  const names = fieldDesc.name ? fieldDesc.name.split('.') : (field as string).split('.')\r\n  const element = item[names[0]]\r\n\r\n  return { element, name: names[0], names }\r\n}\r\n\r\nexport const ListRowItem: React.FC<IListRowParams> = ({ item, field }) => {\r\n  const { element, name, names } = getElementFromField(item, field)\r\n\r\n  if (!element) {\r\n    return (<>ERR NOT EXIST:{name}</>)\r\n  }\r\n\r\n  if ((field as IFilteredFieldDesc).component) {\r\n    const component = (field as IFilteredFieldDesc).component\r\n    return (<>{component && component({ value: element, names, item })}</>)\r\n  }\r\n\r\n  if (element.substr && element.length > 50) {\r\n    return (<>{element.substr(0, 47)}...</>)\r\n  }\r\n\r\n  if (element.push && element.reduce && names.length > 1) {\r\n    return (<>{(element as any[]).reduce((p, e) => p + e[names[1]], '')}</>)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {element}\r\n    </>\r\n  );\r\n};\r\n\r\n","import React, { useCallback, useMemo } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button } from 'react-bootstrap'\r\nimport './Row.css'\r\nimport { ListRowItem, IFilteredField } from './RowItem'\r\n\r\nexport interface IListRowItem {\r\n  id: string\r\n  name: string\r\n  user: any\r\n}\r\n\r\nexport interface IListRowParams {\r\n  name: string\r\n  item: any\r\n  fields?: IFilteredField[]\r\n  onDelete: (obj: any) => void\r\n  showDelete?: boolean\r\n  onEdit?: (item: any) => void\r\n  getEditLink?: (item: unknown) => string\r\n}\r\n\r\nexport const ListRow: React.FC<IListRowParams> = ({ item, onDelete, name, fields = ['id'], showDelete = false, onEdit, getEditLink }) => {\r\n  const doEdit = useCallback(() => {\r\n    if (onEdit) onEdit(item)\r\n  }, [item, onEdit])\r\n\r\n  const editLink = useMemo(() => {\r\n    if (getEditLink) return getEditLink(item)\r\n    else return `/user/${name.toLowerCase()}/${item.id}`\r\n  }, [name, item, getEditLink])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <tr>\r\n        <td className=\"id\">{onEdit ? <span role={'link'} tabIndex={0} onKeyPress={()=>{}} onClick={doEdit}>{item.id}</span> : <Link to={editLink}>{item.id}</Link>}</td>\r\n        {fields.map(\r\n          (field) =>\r\n            field !== 'id' && (\r\n              <td>\r\n                <ListRowItem item={item} field={field} />\r\n              </td>\r\n            ),\r\n        )}\r\n        {item.user && <td>{item.user.email}</td>}\r\n\r\n        {showDelete && (\r\n          <td className=\"right\">\r\n            <Button\r\n              variant=\"danger\"\r\n              size=\"sm\"\r\n              onClick={() => {\r\n                onDelete(item)\r\n              }}\r\n            >\r\n              delete\r\n            </Button>\r\n          </td>\r\n        )}\r\n      </tr>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import { useMutation, useQuery } from '@apollo/client'\r\nimport { DocumentNode } from 'graphql'\r\nimport React, { useState } from 'react'\r\nimport { Table as BTable } from 'react-bootstrap'\r\nimport DeleteModal from '../DeleteModal/DeleteModal'\r\nimport Loading from '../Loading/Loading'\r\nimport Unauthorized from '../Unauthorized/Unauthorized'\r\nimport { IListRowParams, ListRow } from './Row'\r\nimport { IFilteredField } from './RowItem'\r\n\r\n\r\nexport interface IFilterWithParams {\r\n  filter?: string\r\n  params?: string\r\n}\r\n\r\nexport interface ITableQueries {\r\n  ADMIN_LIST_QUERY: DocumentNode\r\n  USER_LIST_QUERY: DocumentNode\r\n  DELETE_MUTATION: DocumentNode\r\n}\r\n\r\nexport interface ITableList {\r\n  userId?: string\r\n  adminMode?: boolean\r\n  filter: any\r\n  queries: ITableQueries\r\n  fields?: IFilteredField[]\r\n  name: string\r\n  onEdit: IListRowParams['onEdit']\r\n  getEditLink?: IListRowParams['getEditLink']\r\n}\r\n\r\nexport const Table: React.FC<ITableList> = ({ filter, name, adminMode = false, queries, fields, onEdit, getEditLink }) => {\r\n  const [unauthorized, setUnauthorized] = useState(false)\r\n  const [deleteObject, setDeleteObject] = useState(null)\r\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false)\r\n  const [deletingOnDeleteDialog, setDeletingOnDeleteDialog] = useState(false)\r\n\r\n  const [data, setData] = useState<any>([])\r\n  const [error, setError] = useState<any>()\r\n\r\n  const { refetch: userRefetch, loading } = useQuery(adminMode ? queries.ADMIN_LIST_QUERY : queries.USER_LIST_QUERY, {\r\n    onError: (e) => {\r\n      if (e.message === 'GraphQL error: Unauhorized') {\r\n        setUnauthorized(true)\r\n      } else {\r\n        setError(e)\r\n      }\r\n    },\r\n    onCompleted: (d) => {\r\n      const dataFields = Object.getOwnPropertyNames(d)\r\n      if (dataFields.length > 0 && d[dataFields[0]].length > 0) {\r\n        setData(d[dataFields[0]])\r\n      } else {\r\n        setData([])\r\n      }\r\n    },\r\n    variables: { filter },\r\n  })\r\n\r\n  const [deleteProjectMutation] = useMutation(queries.DELETE_MUTATION, {\r\n    errorPolicy: 'none',\r\n    onCompleted: (data: any) => {\r\n      onHideDidaloDelete()\r\n      userRefetch()\r\n    },\r\n    onError: (e) => {\r\n      if (e.message === 'GraphQL error: Unauhorized') {\r\n        setUnauthorized(true)\r\n      }\r\n    },\r\n  })\r\n\r\n  const onHideDidaloDelete = () => {\r\n    setShowDeleteDialog(false)\r\n    setDeleteObject(null)\r\n  }\r\n\r\n  const onDelete = (obj: any) => {\r\n    setDeletingOnDeleteDialog(false)\r\n    setShowDeleteDialog(true)\r\n    setDeleteObject(obj)\r\n  }\r\n\r\n  const doDelete = (deleteObject: any) => {\r\n    setDeletingOnDeleteDialog(true)\r\n    deleteProjectMutation({\r\n      variables: {\r\n        id: deleteObject.id,\r\n      },\r\n    })\r\n  }\r\n\r\n  if (unauthorized) {\r\n    return <Unauthorized where={name} />\r\n  }\r\n  if (loading) return <Loading what={name} />\r\n\r\n  return (\r\n    <div>\r\n      {error && <div>{`Error! ${error.message}`}</div>}\r\n\r\n      <BTable responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>Id</th>\r\n            {fields?.map((f) => f !== 'id' && <th>{(f as any).name ? (f as any).name : f}</th>)}\r\n            {adminMode && <th>User</th>}\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.length &&\r\n            data.map((projectItem: any) => (\r\n              <ListRow name={name} item={projectItem} onDelete={onDelete} fields={fields} showDelete={adminMode} onEdit={onEdit} getEditLink={getEditLink} />\r\n            ))}\r\n        </tbody>\r\n      </BTable>\r\n\r\n      <DeleteModal\r\n        show={showDeleteDialog}\r\n        onHide={onHideDidaloDelete}\r\n        onDelete={doDelete}\r\n        modelName={name}\r\n        deleteObject={deleteObject}\r\n        deleting={deletingOnDeleteDialog}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Table\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\nimport './FilteredList.css'\r\nimport FilterItem from './FilterItem'\r\nimport { IFilteredField } from './RowItem'\r\nimport Table, { ITableList, ITableQueries } from './Table'\r\n\r\nexport interface IProjectFilterList {\r\n  name: string\r\n  userId?: string\r\n  adminMode?: boolean\r\n  queries: ITableQueries\r\n  fields: IFilteredField[]\r\n  filter?: any\r\n  onCreate?: () => void\r\n  onEdit?: ITableList['onEdit']\r\n  getEditLink?: ITableList['getEditLink']\r\n}\r\n\r\nconst createFilter = () => {\r\n  const obj: any = []\r\n  obj.name = 'AND'\r\n  return { AND: obj }\r\n}\r\n\r\nconst addAnd = (node: any, filter: any) => {\r\n  let obj: any = filter\r\n\r\n  if (node.name !== 'AND') {\r\n    obj = [obj]\r\n    obj.name = 'AND'\r\n  }\r\n\r\n  node.push(obj)\r\n}\r\n\r\nconst filterDestructNode = (node: any) => {\r\n  let filter = ''\r\n\r\n  for (const n of node) {\r\n    if (n.name && n.length > 0) {\r\n      filter += `,${filterDestructNode(n)}`\r\n    } else {\r\n      filter += `,{${n.filter}}`\r\n    }\r\n  }\r\n\r\n  return `{${node.name}:[${filter.substr(1)}]}`\r\n}\r\n\r\nconst filterDestruct = (filter: any) => {\r\n  const fo = {\r\n    filter: '',\r\n    params: '',\r\n  }\r\n\r\n  fo.filter = filter.AND.length > 0 ? `(filter: ${filterDestructNode(filter.AND)})` : ''\r\n  fo.params = fo.params.length > 2 ? `(${fo.params.substr(1)})` : ''\r\n\r\n  return fo\r\n}\r\n\r\nexport const FilteredList: React.FC<IProjectFilterList> = ({ name, userId, adminMode = false, queries, fields, filter: staticFilter, onCreate, onEdit, getEditLink }) => {\r\n  const [filter, setFilter] = useState(adminMode ? createFilter() : null)\r\n  const history = useHistory()\r\n\r\n  // console.log(filter, listFilter)\r\n  const createDefaultFilter = useCallback((userId?: string) => {\r\n    const defaultFilter = createFilter()\r\n\r\n    if (userId) {\r\n      addAnd(defaultFilter.AND, { user_every: { id: userId } })\r\n    }\r\n\r\n    if (staticFilter) {\r\n      addAnd(defaultFilter.AND, staticFilter)\r\n    }\r\n\r\n    return defaultFilter\r\n  }, [staticFilter])\r\n\r\n  const processFilter = (filter: any) => {\r\n    const filterDestructed = filterDestruct(filter)\r\n\r\n    console.log('processFilter', { filter, filterDestructed })\r\n\r\n    setFilter(filter)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const defaultFilter = createDefaultFilter(userId)\r\n    processFilter(defaultFilter)\r\n  }, [userId, createDefaultFilter])\r\n\r\n  const onFilterChange = useCallback(\r\n    (f: string | null) => {\r\n      const defaultFilter = createDefaultFilter(userId)\r\n\r\n      if (f) {\r\n        addAnd(defaultFilter.AND, f)\r\n      }\r\n\r\n      processFilter(defaultFilter)\r\n    },\r\n    [userId, createDefaultFilter],\r\n  )\r\n\r\n  const onCreateNew = () => {\r\n    if (onCreate) onCreate()\r\n    else history.push('/user/' + name.toLowerCase() + '/create')\r\n  }\r\n\r\n  // if is not adminMode,\r\n  // the useEffect will update filter with user after render\r\n  // but in render is already called the query\r\n  // but the query will call without properly setuped filter and return unauthorized\r\n  if (!adminMode && !filter) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"base-filtered-list\">\r\n      <section>\r\n        <h1>{name}</h1>\r\n        <div className=\"row-head\">\r\n          <FilterItem fields={fields} onChange={onFilterChange} />\r\n          <div></div>\r\n        </div>\r\n        <div className=\"row-table\">\r\n          <Table name={name} filter={filter} queries={queries} adminMode={adminMode} fields={fields} onEdit={onEdit} getEditLink={getEditLink} />\r\n          <Button onClick={onCreateNew}>Create New</Button>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FilteredList\r\n","import { loader } from \"graphql.macro\";\r\nimport React from \"react\";\r\nimport FilteredList from \"../../../components/List/FilteredList\";\r\n\r\nconst USER_LIST_QUERY = loader('./graphql/query-all-user-role-admin.gql')\r\nconst ADMIN_LIST_QUERY = loader('./graphql/query-all-user-role-admin.gql')\r\nconst DELETE_MUTATION = loader('./graphql/mutation-remove-user-role.gql')\r\n\r\nexport const UserRoleList: React.FC<{ userId?: string, adminMode?: boolean }> = ({ userId, adminMode = false }) => {\r\n  return (\r\n    <div>\r\n      <FilteredList\r\n        name={'Roles'}\r\n        fields={['name']}\r\n        userId={userId}\r\n        adminMode={adminMode}\r\n        queries={{ USER_LIST_QUERY, ADMIN_LIST_QUERY, DELETE_MUTATION }} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserRoleList","import { useMutation, useQuery } from \"@apollo/client\";\r\nimport React, { useState } from \"react\";\r\nimport { Dropdown, DropdownButton, Form } from \"react-bootstrap\";\r\n\r\nexport const ConnectBase: React.FC<{ value: any, names?: any, gql: any, item: any }> = ({ value, names, gql, item }) => {\r\n  const element = value\r\n  const name = names.length > 1 && names[1]\r\n  const elementTitle = element.push && element.reduce && names.length > 1 ? (element as any[]).reduce((p, e) => p + `, ${e[name]}`, '').substr(2) : element\r\n\r\n  const [title, setTitle] = useState(elementTitle)\r\n  const [data, setData] = useState<any[]>([])\r\n\r\n  useQuery(gql.QUERY, {\r\n    onCompleted: (iraw) => {\r\n\r\n      const dataFields = Object.getOwnPropertyNames(iraw)\r\n      if (dataFields.length > 0 && iraw[dataFields[0]].length > 0) {\r\n        const raw = iraw[dataFields[0]]\r\n\r\n        const final = raw.map((r: any) => ({\r\n          id: r.id,\r\n          checked: title.indexOf(r[name]) !== -1,\r\n          label: r[name]\r\n        }))\r\n\r\n        setData(final)\r\n      } else {\r\n        setData([])\r\n      }\r\n\r\n    },\r\n  });\r\n\r\n  const [addMutation] = useMutation(gql.ADD, { errorPolicy: \"none\" })\r\n\r\n  const [removeMutation] = useMutation(gql.REMOVE, { errorPolicy: \"none\" })\r\n\r\n  const onChecked = (value: any) => {\r\n    const updated = data.map((d: any) => {\r\n      if (d.label === value.label) {\r\n        d.checked = !d.checked\r\n      }\r\n      return { ...d }\r\n    })\r\n\r\n    const updateTitle = (updated as any[]).reduce((p, e) => {\r\n      if (e.checked) return `${p}, ${e.label}`\r\n      else return p\r\n    }, '').substr(1)\r\n\r\n    if (value.checked) {\r\n      addMutation({\r\n        variables: {\r\n          id1: value.id,\r\n          id2: item.id\r\n        }\r\n      });\r\n    } else {\r\n      removeMutation({\r\n        variables: {\r\n          id1: value.id,\r\n          id2: item.id\r\n        }\r\n      });\r\n    }\r\n\r\n\r\n    setData(updated)\r\n    setTitle(updateTitle)\r\n  }\r\n\r\n  // if(element.push && element.reduce && names.length > 1) {\r\n  //   return (<>ahoj: {(element as any[]).reduce((p, e)=>p + e[names[1]], '')}</>)\r\n  // }\r\n\r\n  return (<DropdownButton id=\"dropdown-basic-button\" title={title}>\r\n    {data && data.map((d: any) => (\r\n      <Dropdown.Item onClick={(e: any) => onChecked(d)} >\r\n        <Form.Check\r\n          type=\"checkbox\"\r\n          label={d.label}\r\n          checked={d.checked} />\r\n      </Dropdown.Item>))\r\n    }\r\n  </DropdownButton>)\r\n}\r\n\r\nexport default ConnectBase","import React from \"react\";\r\nimport gql from 'graphql-tag';\r\nimport FilteredList from \"../../../components/List/FilteredList\";\r\nimport ConnectBase from \"../../../components/List/ConnectBase\";\r\nimport { loader } from \"graphql.macro\";\r\n\r\nconst QUERY_ALL_USERS_ADMIN = loader('./graphql/query-all-user-admin.gql')\r\nconst USER_ROLE_QUERY = loader('./graphql/query-all-user-role.gql')\r\nconst MUTATION_ADD_USER_ROLE_TO_USER = loader('./graphql/mutation-add-user-role-to-user.gql')\r\nconst MUTATION_REMOVE_USER_ROLE_FROM_USER = loader('./graphql/mutation-remove-user-role-from-user.gql')\r\nconst MUTATION_REMOVE_USER = loader('./graphql/mutation-remove-user.gql')\r\nconst USER_LIST_QUERY = gql`\r\n{allUser{id}}`;\r\n\r\nconst ConnectRole: React.FC<{ value: any, names?: any, item: any }> = ({ value, names, item }) => {\r\n\r\n  const gql = {\r\n    QUERY: USER_ROLE_QUERY,\r\n    ADD: MUTATION_ADD_USER_ROLE_TO_USER,\r\n    REMOVE: MUTATION_REMOVE_USER_ROLE_FROM_USER\r\n  }\r\n\r\n  return <ConnectBase value={value} names={names} gql={gql} item={item} />\r\n}\r\n\r\nexport const UsersList: React.FC<{ userId?: string, adminMode?: boolean }> = ({ userId, adminMode = false }) => {\r\n  return (\r\n    <div>\r\n      <FilteredList\r\n        name={'Users'}\r\n        fields={['email', 'password', { name: 'roles.name', component: ConnectRole }, 'roles.id']}\r\n        userId={userId}\r\n        adminMode={adminMode}\r\n        queries={{ USER_LIST_QUERY, ADMIN_LIST_QUERY: QUERY_ALL_USERS_ADMIN, DELETE_MUTATION: MUTATION_REMOVE_USER }} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UsersList","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Home.css';\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n\r\n        <h1>GraphQL Monster Demo</h1>\r\n\r\n        <pre>\r\n          user: test@graphql.monster\r\n          password: test@graphql.monster\r\n        </pre>\r\n        <Link to=\"/posts\"> Posts (without photos)</Link>\r\n        <Link to=\"/postsV2\"> Posts V2 (with photos)</Link>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import axios from 'axios'\r\nexport const getGraphqlMonsterClientAppRoot = () => process.env.REACT_APP_HOST?.substr(0,process.env.REACT_APP_HOST?.length - 8)\r\n\r\nexport const isEmailValid = (email: string) => {\r\n    if(process.env.NODE_ENV === 'development') return true\r\n\r\n    return new RegExp(/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,15}/g).test(email)\r\n}\r\n\r\nexport const isPasswordValid = (password: string) => {\r\n    //if(process.env.NODE_ENV === 'development') return true\r\n\r\n    const regularExpression = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/\r\n    return regularExpression.test(password)\r\n}\r\n\r\nexport interface IPasswordStrongResult {\r\n    valid: boolean\r\n    strong: number\r\n    name: string\r\n    variant: string\r\n}\r\nexport const passwordStrong = (password: string):IPasswordStrongResult => {\r\n    const length = password.length\r\n\r\n    if(length < 1){\r\n        return {\r\n           valid: false,\r\n           strong: 0,\r\n           name: '',\r\n           variant: 'danger'  \r\n        } as IPasswordStrongResult\r\n    }\r\n\r\n    if(length >= 15){\r\n        return {\r\n            valid: true,\r\n            strong: 100,\r\n            name: 'strong',\r\n            variant: 'success' \r\n         } as IPasswordStrongResult\r\n    }\r\n\r\n    const capital = /(?=.*[A-Z]){2,}/.test(password) ? 2 : ( /(?=.*[A-Z])/.test(password) ? 1 : 0)\r\n    const lower = /(?=.*[a-z]){2,}/.test(password) ? 2 : ( /(?=.*[a-z])/.test(password) ? 1 : 0)\r\n    const number = /(?=.*[0-9]){2,}/.test(password) ? 2 : ( /(?=.*[0-9])/.test(password) ? 1 : 0)\r\n    const special = /(?=.*[!@#$%^&*]){2,}/.test(password) ? 2 : ( /(?=.*[!@#$%^&*])/.test(password) ? 1 : 0)\r\n    \r\n    const value = capital + lower + number + special\r\n\r\n    const valid = (length > 7 && lower > 0 && number > 0) || process.env.NODE_ENV === 'development'\r\n    let percentage = (value+(length/4))\r\n    if(percentage > 10) percentage = 10\r\n\r\n    return {\r\n        valid,\r\n        strong: percentage * 10,\r\n        name: value > 6 ? 'strong' : (value > 4 ? 'intermediate' : (valid ? 'weak' : 'poor')),\r\n        variant: percentage > 6 ? 'success' : (valid ? 'warning' : 'danger'),\r\n    } as IPasswordStrongResult\r\n    \r\n}\r\n\r\nexport type TUploadFileCallback = (err: any, data: any)=>void | null | undefined\r\nexport const uploadFile = (name='files') => async (event: React.FormEvent<HTMLInputElement>, callback:TUploadFileCallback|null| undefined = undefined) => {\r\n  const userToken = localStorage.getItem('user.token')\r\n  const files = event.currentTarget?.files || []\r\n  const file = files[0]\r\n\r\n  const data = new FormData()\r\n  data.append('file', file)\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const event = await axios.post(`${getGraphqlMonsterClientAppRoot()}/upload`, data, {\r\n        // authorization: Bearer\r\n        headers: {\r\n          Authorization: `Bearer ${userToken}`,\r\n        },\r\n      })\r\n\r\n      if(callback){\r\n        callback(null, event.data)\r\n      }\r\n      resolve(event.data)\r\n    } catch(ex) {\r\n      let error = ex\r\n      if(ex.response?.data?.error?.message){\r\n        error = ex.response?.data.error\r\n      }\r\n\r\n      if(error.message === \"Network Error\"){\r\n        error.message = 'File is too large (max file size is 1Mb)'\r\n      }\r\n\r\n      if(callback){\r\n        callback(error, null)\r\n      }\r\n      reject(error)\r\n    }\r\n    \r\n  })\r\n}","import { useMutation } from \"@apollo/client\";\r\nimport { loader } from \"graphql.macro\";\r\nimport React, { useState } from \"react\";\r\nimport { Alert, Button, Form } from \"react-bootstrap\";\r\nimport { isEmailValid } from \"../../../app/utils\";\r\n\r\nconst FORGOTTEN_PASSWORD_REQUEST_MUTATION = loader('./graphql/forgotten-password-request.gql');\r\n\r\nexport const ForgottenPassword: React.FC = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [invalidEmail, setInvalidEmail] = useState(false);\r\n  const [emailSent, setEmailSent] = useState(false)\r\n\r\n  const [doForgottenPassword, { loading, data, }] = useMutation(FORGOTTEN_PASSWORD_REQUEST_MUTATION, {\r\n    errorPolicy: \"none\",\r\n  });\r\n\r\n  const onRequestSend = async () => {\r\n    setEmailSent(false)\r\n    if (email && isEmailValid(email)) {\r\n      setInvalidEmail(false)\r\n      try {\r\n        await doForgottenPassword({ variables: { email } })\r\n        setEmailSent(true)\r\n      } catch (ex) {\r\n        console.log('onError', data)\r\n        setInvalidEmail(true)\r\n      }\r\n    } else {\r\n      setInvalidEmail(true)\r\n    }\r\n  };\r\n\r\n  const onEmailChange = (event: any) => {\r\n    setEmail(event.target.value);\r\n    setInvalidEmail(false);\r\n  };\r\n\r\n  if (emailSent) {\r\n    return (\r\n      <>\r\n        <Alert variant={\"success\"}>We sent to You instruction to email {email}. Check your mailbox (don't forget check spam as well)</Alert>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (<>\r\n    <section id=\"subheader\" data-bgimage=\"url(images/background/5.png) bottom\">\r\n      <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 offset-md-2\">\r\n              <form action='blank.php' className=\"row\" id='form_subscribe' method=\"post\" name=\"myForm\">\r\n                <div className=\"col-md-12 text-center\">\r\n                  <h1>Forgotten Password</h1>\r\n                  <p>Shortly You will be back</p>\r\n                </div>\r\n                <div className=\"clearfix\"></div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <section className=\"no-top\" data-bgimage=\"url(images/background/3.png) top\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 offset-md-3\">\r\n            <form name=\"contactForm\" id='contact_form' className=\"form-border\" method=\"post\" action='blank.php'>\r\n\r\n\r\n              <Form>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Email address</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    onChange={onEmailChange}\r\n                    value={email}\r\n                    isInvalid={invalidEmail}\r\n                  />\r\n                  <Form.Text className=\"text-muted\">\r\n                    We'll never share your email with anyone else.\r\n                  </Form.Text>\r\n                </Form.Group>\r\n\r\n\r\n              </Form>\r\n\r\n              <div id='submit' className=\"pull-left\">\r\n                {!loading && <Button className=\"btn-round\" variant=\"primary\" onClick={() => onRequestSend()}>Send Recovery Link</Button>}\r\n                {loading && <Button className=\"btn-round\" variant=\"primary\" disabled>Loading...</Button>}\r\n\r\n                <div className=\"clearfix\"></div>\r\n              </div>\r\n\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default ForgottenPassword;\r\n","import React from 'react'\r\nimport { Form, ProgressBar } from 'react-bootstrap'\r\nimport { IPasswordStrongResult } from '../../../app/utils'\r\n\r\nexport interface IPasswordComponent {\r\n    strongPassword: IPasswordStrongResult,\r\n    password: string\r\n    onPasswordChange: (arg:any) => void\r\n}\r\n\r\nexport const PasswordComponent:React.FC<IPasswordComponent> = ({onPasswordChange, password, strongPassword}) => (\r\n    <Form.Group controlId=\"formBasicPassword\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={onPasswordChange}\r\n            value={password}\r\n            isInvalid={!strongPassword.valid}\r\n        />\r\n        <Form.Text>Make sure it's at least 15 characters OR at least 8 characters including a number and a lowercase letter</Form.Text>\r\n        <ProgressBar now={strongPassword.strong} label={strongPassword.name} variant={strongPassword.variant}/>\r\n    </Form.Group>\r\n)\r\n\r\nexport default PasswordComponent","import { useMutation } from \"@apollo/client\";\r\nimport { loader } from \"graphql.macro\";\r\nimport _ from \"lodash\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Alert, Button, Form } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { changeState, login } from \"../../../app/reducers/userSlice\";\r\nimport { isPasswordValid, passwordStrong } from \"../../../app/utils\";\r\nimport PasswordComponent from \"./PasswordComponent\";\r\n\r\nexport const FORGOTTEN_PASSWORD_CHECK_MUTATION = loader('./graphql/forgotten-password-check.gql')\r\nexport const FORGOTTEN_PASSWORD_RESET_MUTATION = loader('./graphql/forgotten-password-reset.gql')\r\n\r\n\r\nexport const ForgotenPasswordReset: React.FC<any> = ({ match }) => {\r\n  const token = _.get(match, 'params.token')\r\n  const [password, setPassword] = useState(\"\");\r\n  const [copy, setCopy] = useState(\"\");\r\n\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n\r\n  const [doForgottenPasswordCheck, { loading: loadingForgottenPasswordCheck, data: dataForgottenPasswordCheck }] = useMutation(FORGOTTEN_PASSWORD_CHECK_MUTATION, {\r\n    errorPolicy: \"none\",\r\n  });\r\n\r\n  const [doForgottenPasswordReset, { loading, data }] = useMutation(FORGOTTEN_PASSWORD_RESET_MUTATION, {\r\n    errorPolicy: \"none\",\r\n  });\r\n\r\n\r\n  const { 1: setInvalidPass } = useState(false);\r\n  const [strong, setStrong] = useState(passwordStrong(''))\r\n  const [invalidCopy, setInvalidCopy] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const doCheck = async () => {\r\n      try {\r\n        await doForgottenPasswordCheck({ variables: { token } })\r\n      } catch (ex) {\r\n\r\n      } finally {\r\n      }\r\n\r\n    }\r\n\r\n    doCheck()\r\n\r\n  }, [token, doForgottenPasswordCheck])\r\n\r\n  const onReset = async () => {\r\n    if (!strong.valid) {\r\n      return\r\n    }\r\n\r\n    if (password !== copy) {\r\n      setInvalidCopy(true)\r\n      return\r\n    }\r\n\r\n    try {\r\n      dispatch(changeState('processing'))\r\n      const { data } = await doForgottenPasswordReset({ variables: { token, password } })\r\n      dispatch(login(data.reset))\r\n      history.replace('/user/projects')\r\n    } catch (ex) {\r\n      console.log('onError', data)\r\n\r\n    }\r\n\r\n  };\r\n\r\n  const onPasswordChange = (event: any) => {\r\n    const pass = event.target.value as string\r\n\r\n    setPassword(pass);\r\n    const valid = isPasswordValid(pass)\r\n    setInvalidPass(!valid);\r\n    setStrong(passwordStrong(pass))\r\n  };\r\n\r\n  const onCopyChange = (event: any) => {\r\n    const c = event.target.value\r\n    setCopy(c)\r\n    setInvalidPass(false)\r\n\r\n    if (c === password) {\r\n      setInvalidCopy(false)\r\n    }\r\n  };\r\n\r\n  if (loadingForgottenPasswordCheck) {\r\n    return (<Alert variant={\"success\"}>Checking token</Alert>)\r\n  } else if (dataForgottenPasswordCheck && dataForgottenPasswordCheck.check && dataForgottenPasswordCheck.check.status === 'valid') {\r\n    return (<>\r\n      <section id=\"subheader\" data-bgimage=\"url(images/background/5.png) bottom\">\r\n        <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 offset-md-2\">\r\n                <form action='blank.php' className=\"row\" id='form_subscribe' method=\"post\" name=\"myForm\">\r\n                  <div className=\"col-md-12 text-center\">\r\n                    <h1>User Password Reset</h1>\r\n                    <p>You will be back soon</p>\r\n                  </div>\r\n                  <div className=\"clearfix\"></div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"no-top\" data-bgimage=\"url(images/background/3.png) top\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 offset-md-3\">\r\n              <form name=\"contactForm\" id='contact_form' className=\"form-border\" method=\"post\" action='blank.php'>\r\n\r\n\r\n                <Form>\r\n                  {/* {invalidPass && (<Alert variant={\"danger\"}>The password have to contain capital letter,lower letter, a number and must be 6-16 characters long</Alert>)}   */}\r\n                  {invalidCopy && (<Alert variant={\"danger\"}>The retyped password is not the same</Alert>)}\r\n                  <PasswordComponent password={password} onPasswordChange={onPasswordChange} strongPassword={strong} />\r\n\r\n                  <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Re-Password</Form.Label>\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      placeholder=\"Retype Password\"\r\n                      onChange={onCopyChange}\r\n                      value={copy}\r\n                      isInvalid={invalidCopy}\r\n                    />\r\n                  </Form.Group>\r\n                </Form>\r\n\r\n                <div id='submit' className=\"pull-left\">\r\n                  {!loading && <Button className=\"btn-round\" variant=\"primary\" onClick={() => onReset()} disabled={!strong.valid}>Reset password</Button>}\r\n                  {loading && <Button className=\"btn-round\" variant=\"primary\" disabled>Loading...</Button>}\r\n\r\n                  <div className=\"clearfix\"></div>\r\n\r\n\r\n                </div>\r\n\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n    );\r\n  } else {\r\n    return (<Alert variant={\"danger\"}>The <b>{token}</b> is not valid or already used</Alert>)\r\n  }\r\n\r\n\r\n};\r\n\r\nexport default ForgotenPasswordReset;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from './store';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","\r\n\r\nexport const isEmailValid = (email: string) => {\r\n    if(process.env.NODE_ENV === 'development') return true\r\n\r\n    return new RegExp(/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,15}/g).test(email)\r\n}\r\n\r\nexport const isPasswordValid = (password: string) => {\r\n    //if(process.env.NODE_ENV === 'development') return true\r\n\r\n    const regularExpression = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/\r\n    return regularExpression.test(password)\r\n}\r\n\r\nexport interface IPasswordStrongResult {\r\n    valid: boolean\r\n    strong: number\r\n    name: string\r\n    variant: string\r\n}\r\nexport const passwordStrong = (password: string):IPasswordStrongResult => {\r\n    const length = password.length\r\n\r\n    if(length < 1){\r\n        return {\r\n           valid: false,\r\n           strong: 0,\r\n           name: '',\r\n           variant: 'danger'  \r\n        } as IPasswordStrongResult\r\n    }\r\n\r\n    if(length >= 15){\r\n        return {\r\n            valid: true,\r\n            strong: 100,\r\n            name: 'strong',\r\n            variant: 'success' \r\n         } as IPasswordStrongResult\r\n    }\r\n\r\n    const capital = /(?=.*[A-Z]){2,}/.test(password) ? 2 : ( /(?=.*[A-Z])/.test(password) ? 1 : 0)\r\n    const lower = /(?=.*[a-z]){2,}/.test(password) ? 2 : ( /(?=.*[a-z])/.test(password) ? 1 : 0)\r\n    const number = /(?=.*[0-9]){2,}/.test(password) ? 2 : ( /(?=.*[0-9])/.test(password) ? 1 : 0)\r\n    const special = /(?=.*[!@#$%^&*]){2,}/.test(password) ? 2 : ( /(?=.*[!@#$%^&*])/.test(password) ? 1 : 0)\r\n    \r\n    const value = capital + lower + number + special\r\n\r\n    const valid = (length > 7 && lower > 0 && number > 0) || process.env.NODE_ENV === 'development'\r\n    let percentage = (value+(length/4))\r\n    if(percentage > 10) percentage = 10\r\n\r\n    return {\r\n        valid,\r\n        strong: percentage * 10,\r\n        name: value > 6 ? 'strong' : (value > 4 ? 'intermediate' : (valid ? 'weak' : 'poor')),\r\n        variant: percentage > 6 ? 'success' : (valid ? 'warning' : 'danger'),\r\n    } as IPasswordStrongResult\r\n    \r\n}","import { useMutation } from '@apollo/client';\r\nimport { loader } from 'graphql.macro';\r\nimport React, { useState } from 'react';\r\nimport { Alert, Button, Form } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAppDispatch } from '../../../app/hooks';\r\nimport { changeState, login, UserToken } from '../../../app/reducers/userSlice';\r\nimport { getGraphqlMonsterClientAppRoot } from '../../../app/utils';\r\nimport { isEmailValid } from './utils';\r\n\r\nexport const LOGIN_QL = loader('./graphql/login.gql')\r\n\r\nexport const Login: React.FC = () => {\r\n    const [email, setEmail] = useState(localStorage.getItem('user.email') || '')\r\n    const [pass, setPass] = useState('')\r\n\r\n    const [invalidEmail, setInvalidEmail] = useState(false)\r\n    const [invalidPass, setInvalidPass] = useState(false)\r\n\r\n    const history = useHistory()\r\n    const query = new URLSearchParams(history.location.search)\r\n    const path = query.get('path')\r\n    const role = query.get('role')\r\n    const defaultPath = process.env.REACT_APP_DEFAULT_USER_PATH || '/user/dashboard'\r\n\r\n    const dispatch = useAppDispatch();\r\n    const [loginMutation, { loading }] = useMutation(LOGIN_QL, { errorPolicy: 'none' });\r\n\r\n    const onLogin = async () => {\r\n        if (!isEmailValid(email)) {\r\n            return setInvalidEmail(true)\r\n        }\r\n\r\n        try {\r\n            dispatch(changeState('processing'))\r\n            const { data }: any = await loginMutation({ variables: { email, pass } })\r\n            const userToken = data.login_v1 as UserToken\r\n\r\n            dispatch(login(userToken))\r\n            // go to path in case user want to reach some page before login\r\n            // or go to default path\r\n            history.replace(path || defaultPath)\r\n        } catch (e) {\r\n            setInvalidEmail(true)\r\n            setInvalidPass(true)\r\n            setPass('')\r\n        }\r\n    }\r\n\r\n    const onEmailChange = (event: any) => {\r\n        setEmail(event.target.value)\r\n        setInvalidEmail(false)\r\n        setInvalidPass(false)\r\n    }\r\n\r\n    const onPasswordChange = (event: any) => {\r\n        setPass(event.target.value)\r\n        setInvalidEmail(false)\r\n        setInvalidPass(false)\r\n    }\r\n\r\n    const onBackClick = () => {\r\n        history.goBack()\r\n    }\r\n\r\n    return (<>\r\n        <section id=\"subheader\" data-bgimage=\"url(images/background/5.png) bottom\">\r\n            <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 offset-md-2\">\r\n                            <form action='blank.php' className=\"row\" id='form_subscribe' method=\"post\" name=\"myForm\">\r\n                                <div className=\"col-md-12 text-center\">\r\n                                    <h1>User Login</h1>\r\n                                    <pre>\r\n                                        user: test@graphql.monster\r\n                                        password: test@graphql.monster\r\n                                    </pre>\r\n                                    <p>We was missed you already</p>\r\n                                    {role && <Alert variant={'warning'}>You trying to reach part what is under registered user with <b>{role}</b> role protection. <Link to={'/'} onClick={onBackClick}>Please take me back</Link></Alert>}\r\n                                    {(!role && path) && <Alert variant={'warning'}>You trying to reach part what is under registered user protection. <Link to={'/'} onClick={onBackClick}>Please take me back</Link></Alert>}\r\n                                </div>\r\n                                <div className=\"clearfix\"></div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n\r\n        <section className=\"no-top\" data-bgimage=\"url(images/background/3.png) top\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 offset-md-3\">\r\n                        <Form name=\"contactForm\" id='contact_form' className=\"form-border\" >\r\n                            {!invalidPass && <h3>Login to your account</h3>}\r\n                            {invalidPass && <Alert variant={'danger'}>Email or password is not valid. Did You <Link to=\"/forgotten-password\">forgotten your password</Link>?</Alert>}\r\n                            {invalidEmail && (<Alert variant={\"danger\"}>Email is not in good shape...</Alert>)}\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Label>Email address</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter email\" onChange={onEmailChange} value={email} isInvalid={invalidEmail} />\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type='password' onChange={onPasswordChange} value={pass} isInvalid={invalidPass} />\r\n                                <Form.Text className=\"text-muted\">\r\n                                    We'll never share your password with anyone else.\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <div id='submit' className=\"pull-left\">\r\n                                {!loading && <Button className=\"btn-round\" variant=\"primary\" onClick={() => onLogin()}>Login</Button>}\r\n                                {loading && <Button className=\"btn-round\" variant=\"primary\" disabled>Loading...</Button>}\r\n                                <div className=\"clearfix\"></div>\r\n\r\n                                <div className=\"spacer-single\"></div>\r\n\r\n                                <ul className=\"list s3\">\r\n                                    <li>Or login with:</li>\r\n                                    <li><a href={`${getGraphqlMonsterClientAppRoot()}/auth/github`}>GitHub</a></li>\r\n                                    <li><a href={`${getGraphqlMonsterClientAppRoot()}/auth/facebook`}>Facebook</a></li>\r\n                                    <li><a href={`${getGraphqlMonsterClientAppRoot()}/auth/google`}>Google</a></li>\r\n                                </ul>\r\n\r\n                            </div>\r\n\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </>)\r\n}\r\n\r\nexport default Login","import axios from 'axios'\r\nimport _ from 'lodash'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\nimport { Link, useHistory, useLocation } from 'react-router-dom'\r\nimport { useAppDispatch } from '../../../app/hooks'\r\nimport { login } from '../../../app/reducers/userSlice'\r\nimport { getGraphqlMonsterClientAppRoot } from '../../../app/utils'\r\n\r\nexport const tokenFromFacebookCode = async (type: string, code: string) => {\r\n    return axios.get(`${getGraphqlMonsterClientAppRoot()}/auth/${type}/callback?code=${code}`)\r\n}\r\n\r\nexport const PassportCallback: React.FC<{ type: string }> = ({ type }) => {\r\n    const location = useLocation()\r\n    const codeRaw = _.get(location, 'search', '').split('?code=')\r\n    const code = codeRaw.length > 1 ? codeRaw[1] : ''\r\n\r\n\r\n    const history = useHistory()\r\n    const dispatch = useAppDispatch();\r\n\r\n    const [error, setError] = useState<string>()\r\n\r\n    const showError = (errorMessage: string) => {\r\n        setError(errorMessage)\r\n        setTimeout(() => {\r\n            history.replace('/login')\r\n        }, 4000)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const request = async () => {\r\n            try {\r\n                const data = await tokenFromFacebookCode(type, code)\r\n                dispatch(login(data as any))\r\n                history.replace('/user/projects')\r\n            } catch (ex) {\r\n                const response = JSON.parse(_.get(ex, 'request.response', '{}'))\r\n                showError(response.error?.message || ex.message)\r\n            }\r\n\r\n\r\n        }\r\n\r\n        if (code) request()\r\n        else showError('User denied')\r\n    })\r\n\r\n    return (<>\r\n        {error && <Alert variant={'danger'}>{type} login isn't work due \"{error}\" You will be redirect back to <Link to=\"/login\">Login</Link></Alert>}\r\n    </>)\r\n}\r\n","import { useMutation } from \"@apollo/client\";\r\nimport { loader } from 'graphql.macro';\r\nimport React, { useState } from \"react\";\r\nimport { Alert, Button, Form } from \"react-bootstrap\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAppDispatch } from \"../../../app/hooks\";\r\nimport { changeState, login, UserToken } from \"../../../app/reducers/userSlice\";\r\nimport { isEmailValid, passwordStrong } from \"../../../app/utils\";\r\nimport PasswordComponent from \"./PasswordComponent\";\r\n\r\nexport const REGISTER_MUTATION = loader('./graphql/register.gql')\r\n\r\nexport const Register: React.FC = () => {\r\n  const defaultPath = process.env.REACT_APP_DEFAULT_USER_PATH || '/user/dashboard'\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pass, setPass] = useState(\"\");\r\n  const [copy, setCopy] = useState(\"\");\r\n\r\n  const history = useHistory()\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [registerMutation, { loading, data }] = useMutation(REGISTER_MUTATION, {\r\n    errorPolicy: \"none\",\r\n  });\r\n\r\n  const [invalidEmail, setInvalidEmail] = useState(false);\r\n  const [emailProbablyTaken, setEmailProbablyTaken] = useState(false);\r\n  const [strong, setStrong] = useState(passwordStrong(''))\r\n\r\n  const [invalidCopy, setInvalidCopy] = useState(false);\r\n\r\n  const onRegister = async () => {\r\n    if (!isEmailValid(email)) {\r\n      return setInvalidEmail(true)\r\n    }\r\n\r\n    if (pass !== copy) {\r\n      setInvalidCopy(true)\r\n      return\r\n    }\r\n\r\n    try {\r\n      dispatch(changeState('processing'))\r\n      const { data } = await registerMutation({ variables: { email, pass } })\r\n      const userToken = data.register_v1 as UserToken\r\n\r\n      dispatch(login(userToken))\r\n\r\n      history.replace(defaultPath)\r\n    } catch (ex) {\r\n      console.log('onError', data)\r\n      setEmailProbablyTaken(true)\r\n    }\r\n\r\n  };\r\n\r\n  const onEmailChange = (event: any) => {\r\n    setEmail(event.target.value);\r\n    setInvalidEmail(false);\r\n    setEmailProbablyTaken(false)\r\n  };\r\n\r\n  const onPasswordChange = (event: any) => {\r\n    const pass = event.target.value as string\r\n\r\n    setPass(pass);\r\n    setInvalidEmail(false);\r\n    setStrong(passwordStrong(pass))\r\n  };\r\n\r\n  const onCopyChange = (event: any) => {\r\n    const c = event.target.value\r\n    setCopy(c)\r\n    setInvalidEmail(false)\r\n\r\n    if (c === pass) {\r\n      setInvalidCopy(false)\r\n    }\r\n  };\r\n\r\n  return (<>\r\n    <section id=\"subheader\" data-bgimage=\"url(images/background/5.png) bottom\">\r\n      <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 offset-md-2\">\r\n              <form action='blank.php' className=\"row\" id='form_subscribe' method=\"post\" name=\"myForm\">\r\n                <div className=\"col-md-12 text-center\">\r\n                  <h1>User Registration</h1>\r\n                  <p>All big things starting here</p>\r\n                </div>\r\n                <div className=\"clearfix\"></div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <section className=\"no-top\" data-bgimage=\"url(images/background/3.png) top\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 offset-md-3\">\r\n            <form name=\"contactForm\" id='contact_form' className=\"form-border\" method=\"post\" action='blank.php'>\r\n\r\n\r\n              <Form>\r\n                {invalidEmail && (<Alert variant={\"danger\"}>Email is not in good shape...</Alert>)}\r\n                {emailProbablyTaken && (<Alert variant={\"danger\"}>Email is probably taken, did you <Link to=\"/forgotten-password\">forgotten password</Link>?</Alert>)}\r\n                {invalidCopy && (<Alert variant={\"danger\"}>The retyped password is not the same</Alert>)}\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Email address</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    onChange={onEmailChange}\r\n                    value={email}\r\n                    isInvalid={invalidEmail}\r\n                  />\r\n                  <Form.Text className=\"text-muted\">\r\n                    We'll never share your email with anyone else.\r\n                  </Form.Text>\r\n                </Form.Group>\r\n\r\n                <PasswordComponent password={pass} onPasswordChange={onPasswordChange} strongPassword={strong} />\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Re-Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Retype Password\"\r\n                    onChange={onCopyChange}\r\n                    value={copy}\r\n                    isInvalid={invalidCopy}\r\n                  />\r\n                </Form.Group>\r\n              </Form>\r\n\r\n              <div id='submit' className=\"pull-left\">\r\n                {!loading && <Button className=\"btn-round\" variant=\"primary\" onClick={() => onRegister()}>Register</Button>}\r\n                {loading && <Button className=\"btn-round\" variant=\"primary\" disabled>Loading...</Button>}\r\n\r\n                <div className=\"clearfix\"></div>\r\n\r\n                <div className=\"spacer-single\"></div>\r\n\r\n                {/* <ul className=\"list s3\">\r\n                  <li>Or login with:</li>\r\n                  <li><a href=\"#\">Facebook</a></li>\r\n                  <li><a href=\"#\">Google</a></li>\r\n                  <li><a href=\"#\">Instagram</a></li>\r\n                </ul> */}\r\n\r\n              </div>\r\n\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import { useMutation } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\nimport * as _ from 'lodash';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { login } from \"../../../app/reducers/userSlice\";\r\n\r\nconst VERIFY_EMAIL_MUTATION = gql`\r\n  mutation verifyEmail($verifyToken: String!) {\r\n    verifyEmail_v1(verifyToken: $verifyToken) {\r\n      refreshToken\r\n      token\r\n      user {\r\n        roles{name}\r\n        id,\r\n        email,\r\n        verified\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const VerifyUser: React.FC<any> = ({ match }) => {\r\n  const verifyToken = _.get(match, 'params.verifyToken')\r\n  const [verified, setVerified] = useState(false);\r\n\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n\r\n  const [verify, { loading: verifying, data, error: verifiedError }] = useMutation(VERIFY_EMAIL_MUTATION, {\r\n    errorPolicy: \"none\",\r\n  });\r\n\r\n  const doVerifyUser = async () => {\r\n    try {\r\n      const { data } = await verify({ variables: { verifyToken } })\r\n      dispatch(login(data.verifyEmail_v1))\r\n      setVerified(true)\r\n      localStorage.setItem('user.verifyToken', verifyToken)\r\n      setTimeout(() => {\r\n        history.replace('/user/projects')\r\n      }, 2000)\r\n    } catch (ex) {\r\n      console.log('onError', data)\r\n    }\r\n\r\n  };\r\n\r\n  const onVerifyUser = () => {\r\n    const previouslyVerified = localStorage.getItem('user.verifyToken')\r\n    const userVerified = localStorage.getItem('user.verified') === 'true'\r\n\r\n    // user probably comming with the same link\r\n    // what was for his first verified\r\n    if (userVerified && previouslyVerified === verifyToken) {\r\n      history.replace('/user/projects')\r\n    } else {\r\n      doVerifyUser()\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (verifyToken) {\r\n      onVerifyUser()\r\n    }\r\n  })\r\n\r\n\r\n  return (<section>\r\n    <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8 offset-md-2\">\r\n            {verified ? (<div className=\"alert alert-success\" role=\"alert\">Your account was verified <Button>Start creating</Button></div>) : null}\r\n            {verifying ? (<div className=\"alert alert-dark\" role=\"alert\">Your accont is verifing...</div>) : null}\r\n            {!verifyToken || verifiedError ? (<div className=\"alert alert-dark\" role=\"alert\">The code is invalid or already applyed</div>) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>)\r\n};\r\n\r\nexport default VerifyUser;\r\n","import { useMutation, useQuery } from '@apollo/client'\r\nimport { gql } from 'graphql.macro'\r\nimport React, { useState } from 'react'\r\nimport { Alert, Button, Form } from 'react-bootstrap'\r\n\r\nimport Loading from '../../../components/Loading/Loading'\r\n\r\nimport './Posts.css'\r\n\r\nconst CREATE_MUTATION = gql`\r\n    mutation CreatePost($text: String!, $color: String) {\r\n    createPost(text: $text, color: $color) {\r\n        id\r\n        text,\r\n        color\r\n    }\r\n}`\r\nconst ALL_QUERY = gql`{\r\n  allPost(orderBy: createdAt_desc){\r\n      id,\r\n      text,\r\n      color\r\n  }\r\n}`\r\n\r\nconst Posts = () => {\r\n\r\n  const [text, setText] = useState<string>('')\r\n  const [color, setColor] = useState<string>('#28a745')\r\n\r\n  const [createPost, { error: createError }] = useMutation(CREATE_MUTATION)\r\n  const { data, loading, error: loadingError, refetch } = useQuery(ALL_QUERY)\r\n\r\n  const onTextChange = (event: any) => {\r\n    setText(event.target.value)\r\n  }\r\n\r\n  const onColorChange = (event: any) => {\r\n    setColor(event.target.value)\r\n  }\r\n\r\n  const addPost = async () => {\r\n    setText('')\r\n    const variables = { text, color } as any\r\n    await createPost({ variables })\r\n    refetch()\r\n  }\r\n\r\n  if (loading) {\r\n    return <Loading />\r\n  }\r\n\r\n  return (\r\n    <div className=\"postsPage\">\r\n\r\n      {createError && <Alert variant={'danger'}>Add post: {createError.message}</Alert>}\r\n      {loadingError && <Alert variant={'danger'}>Loading: {loadingError.message}</Alert>}\r\n      <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n        <Form.Label>\r\n          <table>\r\n            <tr>\r\n              <td>\r\n                <div className=\"colorPicker\">\r\n                  <Form.Control\r\n                    type=\"color\"\r\n                    id=\"exampleColorInput\"\r\n                    defaultValue={color}\r\n                    title=\"Choose your color\"\r\n                    onChange={onColorChange}\r\n                  />\r\n                </div>\r\n\r\n              </td>\r\n              <td>\r\n                Create Post V1 (without photos)\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </Form.Label>\r\n        <Form.Control as=\"textarea\" rows={5} value={text} onChange={onTextChange} />\r\n\r\n      </Form.Group>\r\n\r\n      <Button onClick={addPost} variant={'success'}>Post Now</Button>\r\n\r\n      <hr />\r\n      <h4>Posts</h4>\r\n      {\r\n        data?.allPost_v2?.map((post: any, idx: number) => (\r\n          <div className=\"post\" key={idx}>\r\n            <div className=\"hightligtedText\" style={{ backgroundColor: post.color }}>\r\n              {post.text}\r\n            </div>\r\n          </div>\r\n        ))\r\n      }\r\n\r\n      <a href={'https://github.com/miuan/fawesome/blob/37f894d8c62874f1c436e676f87d96e49b57d4e9/src/pages/user/Posts/Posts.tsx'} target={'_blank'} rel=\"noreferrer\">Source code</a>\r\n\r\n    </div >\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Posts\r\n","import React from 'react'\r\nimport { getGraphqlMonsterClientAppRoot } from \"../../app/utils\"\r\n\r\nexport const Image = ({ publicKey, width, height }: { publicKey: string, width?: string | number, height?: string | number }) => {\r\n    const _width = width || '100px'\r\n    const _height = height || '100px'\r\n\r\n    return (\r\n        <div style={{\r\n            overflow: 'hidden',\r\n            width: _width,\r\n            height: _height\r\n        }}>\r\n            <img\r\n                alt=''\r\n                style={{\r\n                    objectFit: 'cover',\r\n                    width: '100%',\r\n                    minHeight: '100%'\r\n                }}\r\n                src={`${getGraphqlMonsterClientAppRoot()}/download/${publicKey}`} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Image","import { useMutation, useQuery } from '@apollo/client'\r\nimport { loader } from 'graphql.macro'\r\nimport React, { useState } from 'react'\r\nimport { Alert, Button, Carousel, Form } from 'react-bootstrap'\r\n\r\nimport { uploadFile } from '../../../app/utils'\r\nimport DeleteModal, { IDeleteModalParams } from '../../../components/DeleteModal/DeleteModal'\r\nimport Loading from '../../../components/Loading/Loading'\r\nimport Image from '../../../components/Image/Image'\r\n\r\n// import { Counter } from './features/counter/Counter';\r\nimport './Posts.css'\r\nimport { Post, TPostModel } from './Post'\r\n\r\nconst CREATE_MUTATION = loader('./graphql/create.gql')\r\nconst ALL_QUERY = loader('./graphql/all.gql')\r\nconst REMOVE_MUTATION = loader('./graphql/remove.gql')\r\nconst REMOVE_IMAGE_MUTATION = loader('./graphql/remove-image.gql')\r\n\r\nconst handeUpload = uploadFile('files')\r\n\r\nconst Posts = () => {\r\n\r\n  const [text, setText] = useState<string>('')\r\n  const [color, setColor] = useState<string>('#28a745')\r\n  const [postForRemoveId, setPostForRemoveId] = useState<TPostModel['id']>()\r\n\r\n  const [createPost, { error: createError }] = useMutation(CREATE_MUTATION)\r\n  const { data, loading, error: loadingError, refetch } = useQuery(ALL_QUERY)\r\n  const [removePost, { error: removeError }] = useMutation(REMOVE_MUTATION)\r\n  const [removeImage, { error: removeImageError }] = useMutation(REMOVE_IMAGE_MUTATION)\r\n\r\n  const [uploadError, setUploadError] = useState<any>()\r\n  const [images, setImages] = useState<any>([])\r\n\r\n  const addPost = async () => {\r\n    setText('')\r\n\r\n\r\n    const variables = { text, color } as any\r\n    if (images && images.length > 0) {\r\n      const uploadedImages = await Promise.all(images.map((image: any) => handeUpload(image.file)))\r\n      variables.imagesIds = uploadedImages.map((ui: any) => ui.id)\r\n    }\r\n\r\n    await createPost({ variables })\r\n    setImages([])\r\n    refetch()\r\n  }\r\n\r\n  const onTextChange = (event: any) => {\r\n    setText(event.target.value)\r\n  }\r\n\r\n  const onColorChange = (event: any) => {\r\n    setColor(event.target.value)\r\n  }\r\n\r\n  const showDeleteModal = (id: TPostModel['id']) => {\r\n    setPostForRemoveId(id)\r\n  }\r\n\r\n  const onDelete: IDeleteModalParams['onDelete'] = async (id) => {\r\n    const postForRemove = data?.allPost_v2.find((p: any) => p.id === id)\r\n    await removePost({ variables: { id } })\r\n\r\n    if (postForRemove?.images?.length > 0) {\r\n      const removeAllImages = postForRemove?.images.map((image: any) => removeImage({ variables: { id: image.id } }))\r\n      await Promise.all(removeAllImages)\r\n    }\r\n    setPostForRemoveId(undefined)\r\n    refetch()\r\n  }\r\n\r\n  const onDeleteModalHide = () => {\r\n    setPostForRemoveId(undefined)\r\n  }\r\n\r\n  const onFileChange = (event: React.FormEvent<HTMLInputElement>) => {\r\n    const target = event.target as any\r\n    if (target?.files?.length > 0) {\r\n      const added = Array.from(target?.files).map((file: any) => ({\r\n        preview: URL.createObjectURL(file),\r\n        file\r\n      }))\r\n\r\n      setImages([...images, ...added])\r\n    }\r\n\r\n\r\n  }\r\n\r\n  const onImageRemove = (image: any) => {\r\n    console.log(image)\r\n    setImages(images.filter((i: any) => i.preview !== image.preview))\r\n  }\r\n\r\n  if (loading) {\r\n    return <Loading />\r\n  }\r\n\r\n  return (\r\n    <div className=\"postsPage\">\r\n\r\n      {createError && <Alert variant={'danger'}>Add post: {createError.message}</Alert>}\r\n      {removeError && <Alert variant={'danger'}>Remove post: {removeError.message}</Alert>}\r\n      {loadingError && <Alert variant={'danger'}>Loading: {loadingError.message}</Alert>}\r\n      {uploadError && <Alert variant={'danger'}>Upload: {uploadError.message}</Alert>}\r\n      <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n        <Form.Label>\r\n          <table>\r\n            <tr>\r\n              <td>\r\n\r\n              </td>\r\n              <td>\r\n                <div className=\"colorPicker\">\r\n                  <Form.Control\r\n                    type=\"color\"\r\n                    id=\"exampleColorInput\"\r\n                    defaultValue={color}\r\n                    title=\"Choose your color\"\r\n                    onChange={onColorChange}\r\n                  />\r\n                </div>\r\n\r\n              </td>\r\n              <td>\r\n                <label className=\"photoButton\" htmlFor=\"uploadImage\">\r\n                  <div >Add photo</div>\r\n                </label>\r\n                <input type=\"file\" id=\"uploadImage\" onChange={onFileChange} style={{ display: 'none' }} multiple={true} />\r\n              </td>\r\n              <td>\r\n                Post V2 with photos\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </Form.Label>\r\n        <Form.Control as=\"textarea\" rows={5} value={text} onChange={onTextChange} />\r\n        {images && images.length > 0 && <div className=\"imagePreviews\">\r\n          <table >\r\n            <tr>\r\n              {images && images.map((image: any) => (<td>\r\n                <div className=\"removePreview\">\r\n                  <PreviewImage src={image.preview} />\r\n                  <span onClick={() => {\r\n                    onImageRemove(image)\r\n                  }} aria-hidden=\"true\">x</span>\r\n                </div>\r\n\r\n              </td>))}\r\n            </tr>\r\n          </table>\r\n        </div>}\r\n\r\n      </Form.Group>\r\n\r\n      <Button onClick={addPost} variant={'success'}>Post Now</Button>\r\n      <div>\r\n\r\n\r\n      </div>\r\n\r\n\r\n\r\n      <hr />\r\n      <h4>Posts</h4>\r\n      {\r\n        data?.allPost_v2?.map((post: any, idx: number) => (\r\n          <div className=\"post\" key={idx} >\r\n            <h5>{post.user?.email}</h5>\r\n\r\n            <Text text={post.text} color={post.color} hasImages={!!post.images?.length} />\r\n            <CarouselImages images={post.images} />\r\n            <div\r\n              // size={'sm'}\r\n              // variant={'danger'}\r\n              onClick={() => {\r\n                showDeleteModal(post.id)\r\n              }}\r\n              aria-hidden=\"true\"\r\n            >\r\n              Remove\r\n            </div>\r\n          </div>\r\n        ))\r\n      }\r\n\r\n      <a href={'https://github.com/miuan/fawesome/blob/37f894d8c62874f1c436e676f87d96e49b57d4e9/src/pages/user/Posts/Posts.tsx'} target={'_blank'}>Source code</a>\r\n\r\n      <DeleteModal\r\n        show={!!postForRemoveId}\r\n        modelName={'Posts'}\r\n        onDelete={onDelete}\r\n        onHide={onDeleteModalHide}\r\n        deleteObject={{ id: postForRemoveId }}\r\n      />\r\n    </div >\r\n  )\r\n}\r\n\r\nexport const Text = ({ text, color, hasImages }: { text: string, color?: string, hasImages?: boolean }) => {\r\n  if (hasImages || text?.length > 100) {\r\n    return (<p>{text}</p>)\r\n  }\r\n\r\n  return (<div className=\"hightligtedText\" style={{ backgroundColor: color }}>\r\n    {text}\r\n  </div>)\r\n}\r\n\r\nconst CarouselImages = ({ images }: { images: any[] }) => {\r\n  return (<Carousel >\r\n    {images.map((image) => (<Carousel.Item>\r\n      <Image publicKey={image.publicKey} width={'800px'} height={'600px'} />\r\n      <Carousel.Caption>\r\n        <h3>First slide label</h3>\r\n        <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n      </Carousel.Caption>\r\n    </Carousel.Item>))\r\n    }\r\n\r\n  </Carousel>)\r\n}\r\n\r\nexport const PreviewImage = ({ src, width, height }: { src: string, width?: string | number, height?: string | number }) => {\r\n  const _width = width || '100px'\r\n  const _height = height || '100px'\r\n\r\n  return (\r\n    <div style={{\r\n      overflow: 'hidden',\r\n      width: _width,\r\n      height: _height\r\n    }}>\r\n      <img\r\n        alt=''\r\n        style={{\r\n          objectFit: 'cover',\r\n          width: '100%',\r\n          minHeight: '100%'\r\n        }}\r\n        src={src} />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Posts\r\n","import React from 'react'\r\n\r\nexport function UserDashboard() {\r\n    return (\r\n      <div>\r\n        <h2>User Dashboard</h2>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n\r\n  export default UserDashboard","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Header from \"./components/Header/Header\";\r\nimport ProtectedRoute from \"./components/ProtectedRoute/ProtectedRoute\";\r\nimport UserRoleEdit from \"./pages/admin/UserRoles/UserRolesEdit\";\r\nimport UserRolesList from \"./pages/admin/UserRoles/UserRolesList\";\r\nimport UsersList from \"./pages/admin/Users/UsersList\";\r\nimport Home from \"./pages/public/Home/Home\";\r\nimport ForgottenPassword from \"./pages/public/Login/ForgottenPassword\";\r\nimport ForgottenPasswordReset from \"./pages/public/Login/ForgottenPasswordReset\";\r\nimport Login from \"./pages/public/Login/Login\";\r\nimport { PassportCallback } from \"./pages/public/Login/PassportCallback\";\r\nimport Register from \"./pages/public/Login/Register\";\r\nimport VerifyUser from \"./pages/public/Login/VerifyUser\";\r\nimport Posts from \"./pages/user/Posts/Posts\";\r\nimport PostsV2 from \"./pages/user/PostsV2/PostsV2\";\r\nimport UserDashboard from \"./pages/user/UserDashboard/UserDashboard\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      {/*\r\n              A <Switch> looks through all its children <Route>\r\n              elements and renders the first one whose path\r\n              matches the current URL. Use a <Switch> any time\r\n              you have multiple routes, but you want only one\r\n              of them to render at a time\r\n            */}\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <ProtectedRoute exact path=\"/posts\">\r\n          <Posts />\r\n        </ProtectedRoute >\r\n        <ProtectedRoute exact path=\"/postsV2\">\r\n          <PostsV2 />\r\n        </ProtectedRoute >\r\n\r\n        <Route exact path=\"/login\">\r\n          <Login />\r\n        </Route>\r\n        <Route path=\"/login/facebook\">\r\n          <PassportCallback type={\"facebook\"} />\r\n        </Route>\r\n        <Route path=\"/login/github\">\r\n          <PassportCallback type={\"github\"} />\r\n        </Route>\r\n        <Route path=\"/login/google\">\r\n          <PassportCallback type={\"google\"} />\r\n        </Route>\r\n        <Route path=\"/register\">\r\n          <Register />\r\n        </Route>\r\n\r\n        <Route\r\n          path=\"/forgotten-password/:token\"\r\n          component={ForgottenPasswordReset}\r\n        />\r\n        <Route exact path=\"/forgotten-password\">\r\n          <ForgottenPassword />\r\n        </Route>\r\n\r\n        <Route path=\"/verify-user/:verifyToken\" component={VerifyUser} />\r\n\r\n        <ProtectedRoute path=\"/user/dashboard\">\r\n          <UserDashboard />\r\n        </ProtectedRoute>\r\n        <Route path=\"/user/info\">{/* <UserInfo /> */}</Route>\r\n\r\n        <ProtectedRoute path=\"/admin/users\" role={\"admin\"}>\r\n          <UsersList adminMode={true} />\r\n        </ProtectedRoute>\r\n        <ProtectedRoute path=\"/admin/roles\" role={\"admin\"}>\r\n          <UserRolesList adminMode={true} />\r\n        </ProtectedRoute>\r\n        <ProtectedRoute\r\n          path=\"/user/roles/:id\"\r\n          role={\"admin\"}\r\n          children={<UserRoleEdit />}\r\n        />\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit'\r\nimport userReducer from './reducers/userSlice'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n})\r\n\r\nexport type AppDispatch = typeof store.dispatch\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, Action<string>>\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import axios from 'axios'\r\n\r\nexport const refreshToken = async () => {\r\n    const userId = localStorage.getItem('user.id')\r\n    const token = localStorage.getItem('user.token')\r\n    const refreshToken = localStorage.getItem('user.refreshToken')\r\n    return axios.post(process.env.REACT_APP_HOST || '', {\r\n        query: `\r\n            mutation refreshToken($userId: ID!, $token: String!, $refreshToken:String!){\r\n                refreshToken_v1(userId: $userId, token: $token, refreshToken:$refreshToken){\r\n                    token,\r\n                    refreshToken\r\n                }\r\n            }\r\n        `,\r\n        variables: {\r\n            userId,\r\n            token,\r\n            refreshToken\r\n        }\r\n    })\r\n}","import { ApolloClient, InMemoryCache, createHttpLink, ApolloLink, fromPromise } from '@apollo/client'\r\nimport { setContext } from '@apollo/client/link/context'\r\nimport { onError } from '@apollo/client/link/error'\r\nimport { refreshToken } from './refreshToken'\r\nimport { RetryLink } from '@apollo/client/link/retry'\r\n\r\nconst retryLink = new RetryLink({\r\n  attempts: (count, operation, error) => {\r\n    return true\r\n  },\r\n  delay: (count, operation, error) => {\r\n    return count * 1000 * Math.random()\r\n  },\r\n})\r\n\r\nlet isRefreshing = false\r\nlet pendingRequests: any = []\r\n\r\nconst resolvePendingRequests = () => {\r\n  //@ts-ignore\r\n  pendingRequests.map((callback) => callback())\r\n  pendingRequests = []\r\n}\r\n\r\n// https://able.bio/AnasT/apollo-graphql-async-access-token-refresh--470t1c8\r\nconst refreshTokenAction = (forward: any, operation: any) => {\r\n  // error code is set to UNAUTHENTICATED\r\n  // when AuthenticationError thrown in resolver\r\n  let forward$\r\n\r\n  if (!isRefreshing) {\r\n    isRefreshing = true\r\n    forward$ = fromPromise(\r\n      refreshToken()\r\n        // @ts-ignore\r\n        .then(({ data }) => {\r\n          const {\r\n            data: { refreshToken_v1 },\r\n          } = data\r\n          localStorage.setItem('user.token', refreshToken_v1.token)\r\n          localStorage.setItem('user.refreshToken', refreshToken_v1.refreshToken)\r\n\r\n          // Store the new tokens for your auth link\r\n          resolvePendingRequests()\r\n          const oldHeaders = operation.getContext().headers\r\n          // modify the operation context with a new token\r\n          operation.setContext({\r\n            headers: {\r\n              ...oldHeaders,\r\n              authorization: `Bearer ${refreshToken_v1.token}`,\r\n            },\r\n          })\r\n          return forward(operation)\r\n        })\r\n        .catch((error) => {\r\n          pendingRequests = []\r\n          // Handle token refresh errors e.g clear stored tokens, redirect to login, ...\r\n          return\r\n        })\r\n        .finally(() => {\r\n          isRefreshing = false\r\n        }),\r\n    ).filter((value) => Boolean(value))\r\n  } else {\r\n    // Will only emit once the Promise is resolved\r\n    forward$ = fromPromise(\r\n      new Promise((resolve) => {\r\n        // @ts-ignore\r\n        pendingRequests.push(() => resolve())\r\n      }),\r\n    )\r\n  }\r\n\r\n  // @ts-ignore\r\n  return forward$.flatMap(() => {\r\n    return forward(operation)\r\n  })\r\n}\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = localStorage.getItem('user.token')\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  }\r\n})\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: process.env.REACT_APP_HOST,\r\n})\r\n\r\n// @ts-ignore\r\nconst erroLink = onError(({ graphQLErrors, networkError, operation, forward }) => {\r\n  if (graphQLErrors){\r\n    if(graphQLErrors.some((error) => (error as any).tokenExpired)) {\r\n      return refreshTokenAction(forward, operation)\r\n    }\r\n    graphQLErrors.map(({ message, locations, path }) => console.log(`[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`))\r\n  }\r\n\r\n  if (networkError) console.log(`[Network error]: ${networkError}`)\r\n})\r\n\r\nexport const apolloClient = new ApolloClient({\r\n  link: ApolloLink.from([retryLink, erroLink, authLink, httpLink]),\r\n  cache: new InMemoryCache(),\r\n  defaultOptions: {\r\n    watchQuery: {\r\n      errorPolicy: 'none',\r\n    },\r\n    query: {\r\n      errorPolicy: 'none',\r\n    },\r\n    mutate: {\r\n      errorPolicy: 'all',\r\n    },\r\n  },\r\n})\r\n\r\nexport default apolloClient\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { store } from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { ApolloProvider } from \"@apollo/client\";\r\nimport apolloClient from \"./app/apolloClient\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ApolloProvider client={apolloClient}>\r\n        <BrowserRouter basename={process.env.REACT_APP_BASENAME}>\r\n          <App />\r\n        </BrowserRouter>\r\n      </ApolloProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}